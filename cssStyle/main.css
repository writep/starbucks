.content01{
  width:100px;
  height:100px;
  background-color: orange;
}
.content02{
  width:300px;
  height:200px;
  background-color: royalblue;
}
.minCont01{
  min-width:400px;
  height:100px;
  background-color: orange;
}
/* ================================= */
.content03{
  width:300px;
  height:200px;
  background-color:royalblue;
  font-size:10px;
}
.view{
  width:50vw;
  height:100vh;
  background-color: orange;
}
.container{

}
.container .item{
  width:100px;
  height:100px;
  background-color: orange;
  margin:10px;
}
.paddingCont{

}
.padding{
  margin:10px;
  padding:10% 10%;
  background-color: royalblue;
}

.borderCont{

}
.border{
  width:100px;
  height:100px;
  background-color: rgba(199, 211, 34, 0.534);
}
.border:first-child{
  border:4px solid red;
}
.border:nth-child(2){
  margin-top:10px;
  border-radius:10px;
}

.contBox{
  width:100px;
  height:100px;
  background-color: tomato;
}
.contBox:first-child{
  border:4px solid red;
  padding:20px;
  box-sizing:border-box;
  /* 내부 여백과 테두리를 추가하게 되면 border-box를 넣게 되면 기존에 지정한 크기 속성을 비율적으로 유지하면서 크기 계산하여 적용(margin, padding, border 포함) */
  /* content-box 도 있음 콘텐츠 내용에 따라 크기가 달라진다: 또한 box-sizing의 기본값이다 */
  /* 따라서 padding으로 공간을 늘렸을 때 비율에 맞춰서 크기를 조정하려면 (예를 들어 a에 속해 있는 b1, b2 등 그룹이 나눠져 있을 때 이를 비율적으로, 공통되게 적용하려면 box-sizing: border-box; 를 적용해 주면 해결된다 */
}

.overflow{
  width:200px;
  height:150px;
  background-color: royalblue;
  margin:20px;
  padding:20px;
  overflow:hidden;
  /* overflow:scroll;
  overflow:auto;
  overflow:visible; */
  /* overflow-x, overflow-y : 개별속성 가능 */
}
.overflow>div{
  width:300px;
  height:100px;
  background-color: orange;
}

.display{
  margin:20px;
}
.displText{
  width:200px;
  height:30px;
  background-color: royalblue;
  color:white;
  display:block;
  /* display:none; */
}
.displTag{
 width:300px;
 height:50px;
 background-color: royalblue;
 color:white;
 display:block;
}

.opacity{
  width:200px;
  height:200px;
  margin:30px;
  padding:30px;
  background-color: tomato;
}
.operCont{
  width:300px;
  height:100px;
  background-color: orange;
  opacity:.8;
}

.type{
  margin:40px;
}
.typeClass>h1{
  font-size:24px;
  font-weight:bold;
  font-style:italic;
  font-family:Arial, Helvetica, sans-serif;
}
.typeClass>p{
  width:350px;
  padding:10px;
  border:1px solid;
  box-sizing:border-box;
  line-height:1.4; /* 권장하는 단위는 배수(오직 숫자로만 : 추후 관리가 편하다) */
}

.aClass{
  
}
.aClass>a{
  display:block;
  width:200px;
  height:100px;
  background-color: orange;
  font-size:22px;
  color:#202020;
  text-decoration:none;
  text-align:center;
  line-height:100px;
}
.aClass>p{
  font-size:24px;
  text-indent:50px; /*양수, 음수로 들여쓰기 내어쓰기 가능*/
}

.background{
  margin:30px;
}
body{
  height:3000px;
}
.bgcCont{
  /*width:200px;*/
  height:200px;
  background-color: orange;
  background-image: url("https://heropy.blog/css/images/logo.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  /*
    background-color:색상, transparent(투명)
    background-image:none, url("경로");
    background-repeat:repeat(반복이 기본값-바둑판형태) no-repeat(반복하지 않음), repeat-x,-y(수평, 수직 반복);
    background-position: top, bottom, left, right, center 방향(극단적인 왼쪽, 오른쪽, 아래, 위로 설정된다 / px, em, rem 등으로 지정
    background-size: auto(이미지의 실 크기로 적용된다), cover(더 넓은 너비로 맞춰서 된다), contain(짧은 너비로 맞춰서 된다) = 너비를 기준으로 이미지가 해당 영역에 포함되는 걸 기준으로 한다
    background-attachment: scroll(이미지가 요소를 따라서 스크롤-기본값), fixed(이미지가 뷰포트에 고정으로 스크롤이 되지 않음;
  */
}
